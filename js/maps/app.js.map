{"version":3,"sources":["app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","default","opponents","map","_constants","gridSubDiv","forEach","enemy","startingZ","this","player","minions","minion","spawnIndex","spawnValue","values","val","index","../modules/constants","2","Math","floor","random","3","friendlies","spawnPos","startingPos","friendlyMap","m","row","distance","getPosition","x","opponentMap","rowArray","push","decision","hasFriendlies","closestIndex","closestVal","distanceTies","idx","unique","fullIdxArr","slice","gaps","filter","indexOf","arrayToUse","gridWidth","Array","prototype","self","4","_interopRequireDefault","obj","__esModule","render","timestamp","requestAnimationFrame","gameView","renderLoop","globals","renderer","scene","camera","performance","rendererStats","update","_view","_gameEngine","_gameEngine2","_gameView","_gameView2","gameEngine","_setupScreenView","setupScreenView","setupPerformance","./modules/game-engine","./modules/game-view","./modules/view","5","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_smartAi","_smartAi2","_defensiveAi","_defensiveAi2","_randomAi","_randomAi2","AI","args","smartAI","defensiveAI","randomAI","determineAIFunction","personality","spawnInterval","lastUpgrade","upgradeInterval","lastSpawn","poppulationLimit","canUpgrade","applyUpgrades","checkUpgrades","canSpawn","AIFunction","spawnMinion","upgrades","canUpgradeBaseHealth","name","cost","getBaseHealthUpgradeCost","canUpgradeMinionHealth","getMinionHealthUpgradeCost","canUpgradeMinionAttack","getMinionAttackUpgradeCost","canUpgradeMinionAttackSpeed","getMinionAttackSpeedUpgradeCost","canUpgradeWizardAttack","getWizardAttackUpgradeCost","canUpgradeWizardAttackSpeed","getWizardAttackSpeedUpgradeCost","_this","upgrade","money","apply","../ai/defensive-ai","../ai/random-ai","../ai/smart-ai","./constants","6","_constants2","Archer","playerId","id","colliderList","direction","startingY","startingX","targetList","arrows","startingRotation","_90deg","PI","_135deg","animationProperties","arm","startingAngle","endingAngle","angleDifference","speedDown","speedUp","lastAnimate","arrowSpeed","attackProperties","lastAttack","attackSpeed","archer","baseAttackSpeed","baseArrowSpeed","attackStrength","baseAttack","arrowId","initializeView","registerCollision","hitBoxOpacity","arguments","undefined","viewObj","THREE","Group","bodyG","BoxGeometry","bodyMat","MeshBasicMaterial","color","body","Mesh","hitBoxG","material","transparent","opacity","depthWrite","hitBox","userData","object","ranged","add","position","set","geometry","computeBoundingBox","box3","boundingBox","clone","collider","THREEx","ColliderBox3","addEventListener","otherCollider","object3d","immuneToRange","findColliderIndex","splice","determineTarget","removeTarget","initiateAttack","recharging","_this2","canAttack","nextTarget","callback","health","getAttackValue","processReward","killReward","attack","destroy","_this3","arrowG","SphereGeometry","arrowMat","arrow","y","max","endingY","y_1","y_2","y_3","b","c","yFunction","delta","m_x","c_x","xFunction","m_z","z","c_z","zFunction","startingTime","setTimeout","remove","_this4","rightArm","rotation","timeRatio","degreeChange","spawnArrow","resetAttackAnimation","_delta","_timeRatio","_degreeChange","angleTowardsTarget","calculateAngleToTarget","bodyModel","xDiff","zDiff","diffRatio","atan","attackProcedure","animateArrows","animateAttack","7","Base","baseWidth","baseHeight","baseDepth","maxHealth","hitBoxBuffer","score","shapeGeometry","textureLoader","TextureLoader","normalMap","load","longTexture","skinnyTexture","sideTexture","wrapS","wrapT","RepeatWrapping","repeat","skinnyMat","MeshPhongMaterial","specular","shininess","normalScale","Vector2","longMat","sideMat","shapeMaterials","shapeMesh","MultiMaterial","hitGeometry","hitMaterial","hitMesh","healthBar","initializeHealthBar","_healthBarLength","_healthBarWidth","fullHealthBarGeometry","fullHealthBarMaterial","fullHealthBarMesh","emptyHealthBarGeometry","emptyHealthBarMaterial","emptyHealthBarMesh","healthBarGroup","healthPercent","healthBarOffset","fullHealthBar","getObjectByName","scale","updateHealthBar","8","xPositive","xNegative","baseHealth","amount","base","9","_player","_player2","_aiPlayer","_aiPlayer2","_menuScreen","GameEngine","gameOver","state","colliderSystem","ColliderSystem","initializePlayers","myPlayer","type","computer","playerAI","players","_ref","winner","p","setGameOver","activateMenu","pop","reset","runLoop","lost","find","initializeGameOver","computeAndNotify","./ai-player","./menu-screen","./player","10","scoreText","moneyText","poppulationText","baseHealthText","minionBaseHealthText","minionBaseAttackText","minionBaseAttackSpeedText","archerBaseAttackText","archerBaseAttackSpeedText","baseHealthUpgrade","minionBaseHealthUpgrade","minionBaseAttackUpgrade","minionBaseAttackSpeedUpgrade","archerBaseAttackUpgrade","archerBaseAttackSpeedUpgrade","planeTexture","GameView","setupGrid","setupGrassField","setupLight","mouse","positionScale","lookAt","hud","document","getElementById","hudUpgrade","lastTimeStamp","started","raycaster","Raycaster","currentHoveredPanel","setupMouseEvent","bindButtons","lightAmbient","AmbientLight","lightSource","PointLight","grid","GridHelper","gridPanels","panelLength","zPos","planeGeometry","PlaneGeometry","planeMaterial","plane","texture","anisotropy","getMaxAnisotropy","rotateX","setFromCamera","planes","intersects","intersectObjects","panel","setHex","window","evt","event","clientX","innerWidth","clientY","innerHeight","restart","classList","initializeUpgradeButtons","initializeHudTexts","getCurrentPanelIndex","round","textContent","poppulationCap","toFixed","minionBaseHealth","minionBaseAttack","minionBaseAttackSpeed","archerBaseAttack","archerBaseAttackSpeed","checkGridIntersections","gameLoop","updateUI","upgradeBaseHealth","upgradeMinionHealth","upgradeMinionAttack","upgradeMinionAttackSpeed","upgradeWizardAttack","upgradeWizardAttackSpeed","11","activateStartScreen","startSection","restartSection","activateRestartScreen","text","restartModalMessage","modal","closeMenu","startButton","startFirstGame","restartButton","12","Minion","healthUpgrade","attackUpgrade","attackSpeedUpgrade","defaultSpeed","speed","attackTime","attackAnimationProperties","walkingAnimationProperties","time","rotObjectMatrix","dispose","currentTarget","resetWalkAnimation","walkProcedure","attackLoop","children","currentAttackTime","animationSpeed","min","walkLoop","animateWalk","legs","leftLeg","rightLeg","animateLegForward","animateLegBack","toDegrees","leg","maxRotation","toRadians","angleRadians","angleDegrees","13","_minion","_minion2","_archer","_archer2","_base","_base2","Player","minionId","setUpgradeValues","loader","ObjectLoader","setupGameState","spawnBase","spawnArchers","archers","minionCost","reward","keys","destroyBase","destroyMinion","removeEventListener","_this5","./archer","./base","./minion","14","handleResize","w","h","setSize","aspect","updateProjectionMatrix","setupResizing","Scene","PerspectiveCamera","WebGLRenderer","shadowMapEnabled","shadowMapType","PCFSoftShadowMap","appendChild","domElement","RendererStats","style","left","bottom"],"mappings":"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","file":"../app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (opponents) {\n  var map = {};\n  for (var i = 0; i < _constants.gridSubDiv; i++) {\n    map[i] = 0;\n  }\n\n  opponents.forEach(function (enemy) {\n    map[enemy.startingZ]--;\n  });\n\n  this.player.minions.forEach(function (minion) {\n    map[minion.startingZ]++;\n  });\n\n  var spawnIndex = -1;\n  var spawnValue = 100000;\n  Object.values(map).forEach(function (val, index) {\n    if (val < spawnValue) {\n      spawnValue = val;\n      spawnIndex = index;\n    }\n  });\n\n  return spawnIndex;\n};\n\nvar _constants = require('../modules/constants');\n\n},{\"../modules/constants\":8}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (opponents) {\n    return Math.floor(Math.random() * _constants.gridSubDiv);\n};\n\nvar _constants = require('../modules/constants');\n\n},{\"../modules/constants\":8}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (opponents, friendlies, spawnPos) {\n  var startingPos = spawnPos;\n\n  var friendlyMap = friendlies.map(function (m) {\n    return {\n      row: m.startingZ,\n      distance: m.getPosition().x - startingPos\n    };\n  });\n\n  var opponentMap = opponents.map(function (m) {\n\n    var distance = startingPos - m.getPosition().x;\n    return {\n      row: m.startingZ,\n      distance: distance\n    };\n  });\n\n  var rowArray = [];\n  for (var i = 0; i < _constants.gridSubDiv; i++) {\n    rowArray.push(i);\n  }\n\n  var decision = {\n    hasFriendlies: [],\n    closestIndex: -1,\n    closestVal: 99999,\n    distanceTies: []\n\n  };\n\n  friendlyMap.forEach(function (val, idx) {\n    decision.hasFriendlies.push(val.row);\n  });\n\n  opponentMap.forEach(function (val, idx) {\n    if (val.distance < decision.closestVal) {\n      decision.closestIndex = val.row;\n      decision.closestVal = val.distance;\n\n      if (decision.distanceTies.length > 0) {\n        decision.distanceTies.length = 0;\n      }\n    } else if (val.distance === decision.closestVal) {\n      decision.distanceTies.push(val.row);\n    }\n  });\n\n  decision.distanceTies.push(decision.closestIndex);\n  decision.hasFriendlies = decision.hasFriendlies.unique();\n\n  var fullIdxArr = rowArray.slice(0);\n\n  decision.gaps = fullIdxArr.filter(function (x) {\n    return decision.hasFriendlies.indexOf(x) < 0;\n  });\n\n  //if(friendlies.length > 3) {\n  //friendlies[2].viewObj.position.z += 1;\n  //}\n\n\n  var arrayToUse = void 0;\n  if (decision.closestVal < _constants.gridWidth / 2) {\n    arrayToUse = decision.distanceTies;\n  } else {\n    arrayToUse = decision.gaps;\n  }\n\n  var arrIdx = Math.floor(Math.random() * arrayToUse.length);\n  return arrayToUse[arrIdx];\n};\n\nvar _constants = require('../modules/constants');\n\nArray.prototype.unique = function () {\n  return this.filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  });\n};\n\n},{\"../modules/constants\":8}],4:[function(require,module,exports){\n'use strict';\n\nvar _view = require('./modules/view');\n\nvar _gameEngine = require('./modules/game-engine');\n\nvar _gameEngine2 = _interopRequireDefault(_gameEngine);\n\nvar _gameView = require('./modules/game-view');\n\nvar _gameView2 = _interopRequireDefault(_gameView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Globals\nvar globals = void 0;\n\nvar gameEngine = void 0,\n    gameView = void 0;\nvar rendererStats = void 0;\nvar performance = true;\n\nfunction init() {\n  var _setupScreenView = (0, _view.setupScreenView)(),\n      scene = _setupScreenView.scene,\n      camera = _setupScreenView.camera,\n      renderer = _setupScreenView.renderer;\n\n  globals = { scene: scene, camera: camera, renderer: renderer };\n\n  if (performance) {\n    rendererStats = (0, _view.setupPerformance)();\n  }\n\n  gameEngine = new _gameEngine2.default(globals);\n  gameView = new _gameView2.default(globals, gameEngine);\n\n  render();\n}\n\nfunction render(timestamp) {\n  requestAnimationFrame(render);\n  gameView.renderLoop(timestamp);\n\n  globals.renderer.render(globals.scene, globals.camera);\n  if (performance) {\n    rendererStats.update(globals.renderer);\n  }\n}\n\ninit();\n\n},{\"./modules/game-engine\":9,\"./modules/game-view\":10,\"./modules/view\":14}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _smartAi = require('../ai/smart-ai');\n\nvar _smartAi2 = _interopRequireDefault(_smartAi);\n\nvar _defensiveAi = require('../ai/defensive-ai');\n\nvar _defensiveAi2 = _interopRequireDefault(_defensiveAi);\n\nvar _randomAi = require('../ai/random-ai');\n\nvar _randomAi2 = _interopRequireDefault(_randomAi);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AI = function () {\n  function AI(args) {\n    _classCallCheck(this, AI);\n\n    this.smartAI = _smartAi2.default;\n    this.defensiveAI = _defensiveAi2.default;\n    this.randomAI = _randomAi2.default;\n    this.determineAIFunction(args.personality);\n    this.player = args.player;\n    this.spawnInterval = 350;\n    this.lastUpgrade = 0;\n    this.upgradeInterval = 2000;\n    this.lastSpawn = 0;\n    this.poppulationLimit = 30;\n  }\n\n  _createClass(AI, [{\n    key: 'canSpawn',\n    value: function canSpawn(timestamp) {\n      return timestamp - this.lastSpawn > this.spawnInterval && this.player.minions.length < this.poppulationLimit;\n    }\n  }, {\n    key: 'canUpgrade',\n    value: function canUpgrade(timestamp) {\n      return timestamp - this.lastUpgrade > this.upgradeInterval;\n    }\n  }, {\n    key: 'runLoop',\n    value: function runLoop(timestamp, opponents) {\n      if (this.canUpgrade(timestamp)) {\n        this.applyUpgrades(this.checkUpgrades());\n        this.lastUpgrade = timestamp;\n      }\n\n      if (!this.canSpawn(timestamp)) {\n        return;\n      }\n\n      var spawnIndex = this.AIFunction(opponents, this.player.minions, this.player.spawnPos);\n\n      if (spawnIndex >= 0) {\n        this.player.spawnMinion(spawnIndex);\n        this.lastSpawn = timestamp;\n      }\n    }\n  }, {\n    key: 'determineAIFunction',\n    value: function determineAIFunction(personality) {\n      if (personality) {\n        this.AIFunction = this[personality];\n      } else {\n        this.AIFunction = this[\"randomAI\"];\n      }\n    }\n\n    //check all upgradeCosts to see if any can be upgrades returns a list of what can be upgraded and their cost\n\n  }, {\n    key: 'checkUpgrades',\n    value: function checkUpgrades() {\n      var upgrades = [];\n\n      if (this.player.canUpgradeBaseHealth()) {\n        upgrades.push({ name: \"upgradeBaseHealth\", cost: this.player.getBaseHealthUpgradeCost() });\n      }\n\n      if (this.player.canUpgradeMinionHealth()) {\n        upgrades.push({ name: \"upgradeMinionHealth\", cost: this.player.getMinionHealthUpgradeCost() });\n      }\n\n      if (this.player.canUpgradeMinionAttack()) {\n        upgrades.push({ name: \"upgradeMinionAttack\", cost: this.player.getMinionAttackUpgradeCost() });\n      }\n\n      if (this.player.canUpgradeMinionAttackSpeed()) {\n        upgrades.push({ name: \"upgradeMinionAttackSpeed\", cost: this.player.getMinionAttackSpeedUpgradeCost() });\n      }\n\n      if (this.player.canUpgradeWizardAttack()) {\n        upgrades.push({ name: \"upgradeWizardAttack\", cost: this.player.getWizardAttackUpgradeCost() });\n      }\n\n      if (this.player.canUpgradeWizardAttackSpeed()) {\n        upgrades.push({ name: \"upgradeWizardAttackSpeed\", cost: this.player.getWizardAttackSpeedUpgradeCost() });\n      }\n\n      return upgrades;\n    }\n  }, {\n    key: 'applyUpgrades',\n    value: function applyUpgrades(upgrades) {\n      var _this = this;\n\n      upgrades.forEach(function (upgrade) {\n        if (_this.player.money / 2 > upgrade.cost && _this.player.money > 750) {\n          var fn = _this.player[upgrade.name];\n          fn.apply(_this.player);\n        }\n      });\n    }\n  }]);\n\n  return AI;\n}();\n\nexports.default = AI;\n\n},{\"../ai/defensive-ai\":1,\"../ai/random-ai\":2,\"../ai/smart-ai\":3,\"./constants\":8}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Archer = function () {\n  function Archer(args) {\n    _classCallCheck(this, Archer);\n\n    this.scene = args.scene;\n    this.player = args.player;\n    this.playerId = this.player.id;\n    this.colliderList = args.colliderList;\n\n    this.direction = args.direction;\n    this.startingZ = args.startingZ;\n    this.startingY = args.startingY + 4;\n    this.startingX = args.startingX - 4 * this.direction;\n\n    this.targetList = [];\n    this.arrows = [];\n\n    this.startingRotation = 0;\n    var _90deg = 90 / 180 * Math.PI;\n    var _135deg = 135 / 180 * Math.PI;\n\n    this.animationProperties = {\n      arm: {\n        startingAngle: _135deg,\n        endingAngle: _90deg,\n        angleDifference: _135deg - _90deg,\n        speedDown: 200,\n        speedUp: 150,\n        lastAnimate: null\n      },\n      arrowSpeed: 500\n    };\n\n    this.attackProperties = {\n      lastAttack: 0\n    };\n\n    this.attackSpeed = _constants2.default.archer.baseAttackSpeed;\n    this.arrowSpeed = _constants2.default.archer.baseArrowSpeed;\n    this.attackStrength = _constants2.default.archer.baseAttack;\n    this.arrowId = 0;\n    this.initializeView();\n    this.registerCollision();\n  }\n\n  _createClass(Archer, [{\n    key: 'initializeView',\n    value: function initializeView() {\n      var hitBoxOpacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.viewObj = new THREE.Group();\n\n      var bodyG = new THREE.BoxGeometry(0.01, 0.013, 0.013);\n      var bodyMat = new THREE.MeshBasicMaterial({ color: 0x00FF00 });\n      this.body = new THREE.Mesh(bodyG, bodyMat);\n\n      var hitBoxG = new THREE.BoxGeometry(60, 60, 60);\n      var material = new THREE.MeshBasicMaterial({ color: 0xffff00, transparent: true, opacity: hitBoxOpacity, depthWrite: false });\n      this.hitBox = new THREE.Mesh(hitBoxG, material);\n\n      this.hitBox.userData.player = this.player;\n      this.hitBox.userData.object = this;\n      this.hitBox.userData.ranged = true;\n\n      this.viewObj.add(this.body);\n      this.viewObj.add(this.hitBox);\n\n      this.viewObj.position.set(this.startingX, this.startingY, this.startingZ);\n    }\n  }, {\n    key: 'registerCollision',\n    value: function registerCollision() {\n      var _this = this;\n\n      this.hitBox.geometry.computeBoundingBox();\n      var box3 = this.hitBox.geometry.boundingBox.clone();\n      this.collider = new THREEx.ColliderBox3(this.hitBox, box3);\n      this.colliderList.push(this.collider);\n\n      this.collider.addEventListener('contactEnter', function (otherCollider) {\n        var userData = otherCollider.object3d.userData;\n\n        if (userData.player.id === _this.playerId) {\n          return;\n        }\n        if (userData.ranged || userData.immuneToRange) {\n          return;\n        }\n\n        _this.targetList.push(userData.object);\n      });\n\n      this.collider.addEventListener('contactStay', function (otherCollider) {\n        var userData = otherCollider.object3d.userData;\n\n        if (userData.player.id === _this.playerId) {\n          return;\n        }\n        if (userData.ranged || userData.immuneToRange) {\n          return;\n        }\n\n        if (_this.findColliderIndex(otherCollider.id) === -1) {\n          _this.targetList.push(userData.object);\n        }\n      });\n\n      this.collider.addEventListener('contactRemoved', function (otherCollider) {\n        _this.targetList.splice(_this.findColliderIndex(otherCollider), 1);\n        _this.determineTarget();\n      });\n\n      this.collider.addEventListener('contactExit', function (otherCollider) {\n        _this.removeTarget(otherCollider);\n        _this.determineTarget();\n      });\n    }\n  }, {\n    key: 'findColliderIndex',\n    value: function findColliderIndex(id) {\n      var index = -1;\n\n      for (var i = 0; i < this.targetList.length; i++) {\n        if (this.targetList[i].collider.id === id) {\n          index = i;\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: 'removeTarget',\n    value: function removeTarget(id) {\n      this.targetList.splice(this.findColliderIndex(id), 1);\n    }\n  }, {\n    key: 'canAttack',\n    value: function canAttack(timestamp) {\n      if (this.targetList.length === 0) {\n        return false;\n      }\n      if (this.initiateAttack || this.recharging) {\n        return false;\n      }\n\n      var delta = timestamp - this.attackProperties.lastAttack;\n      return delta >= this.attackSpeed;\n    }\n  }, {\n    key: 'getAttackValue',\n    value: function getAttackValue() {\n      return this.attackStrength;\n    }\n  }, {\n    key: 'determineTarget',\n    value: function determineTarget() {\n      if (this.targetList.length > 0) {\n        return this.targetList[0];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'attackProcedure',\n    value: function attackProcedure(timestamp) {\n      var _this2 = this;\n\n      if (!this.canAttack(timestamp)) {\n        return;\n      }\n\n      var target = this.determineTarget();\n      if (target !== null && target.viewObj) {\n        this.nextTarget = {\n          target: target,\n          callback: function callback(target) {\n            target.health -= _this2.getAttackValue();\n            if (target.health <= 0) {\n              _this2.player.processReward(target.killReward);\n\n              target.attack = false;\n              target.destroy = true;\n              _this2.removeTarget(target.collider.id);\n            }\n          }\n        };\n        this.initiateAttack = true;\n      }\n\n      this.attackProperties.lastAttack = timestamp;\n    }\n  }, {\n    key: 'spawnArrow',\n    value: function spawnArrow(target, timestamp, callback) {\n      var _this3 = this;\n\n      var arrowG = new THREE.SphereGeometry(1, 10, 10);\n      var arrowMat = new THREE.MeshBasicMaterial({ color: 0x9C3724 });\n      var arrow = new THREE.Mesh(arrowG, arrowMat);\n      arrow.name = \"Arrow\";\n      this.scene.add(arrow);\n\n      arrow.position.set(this.startingX, this.startingY + 2, this.startingZ);\n\n      var id = this.arrowId++;\n\n      var startingY = arrow.position.y;\n      var max = startingY + 5;\n      var endingY = target.viewObj.position.y;\n\n      var x_1 = 0;\n      var y_1 = startingY;\n\n      var x_2 = 0.5;\n      var y_2 = max;\n\n      var x_3 = 1;\n      var y_3 = endingY;\n\n      var a = y_1 / ((x_1 - x_2) * (x_1 - x_3)) + y_2 / ((x_2 - x_1) * (x_2 - x_3)) + y_3 / ((x_3 - x_1) * (x_3 - x_2));\n\n      var b = -y_1 * (x_2 + x_3) / ((x_1 - x_2) * (x_1 - x_3)) - y_2 * (x_1 + x_3) / ((x_2 - x_1) * (x_2 - x_3)) - y_3 * (x_1 + x_2) / ((x_3 - x_1) * (x_3 - x_2));\n\n      var c = y_1 * x_2 * x_3 / ((x_1 - x_2) * (x_1 - x_3)) + y_2 * x_1 * x_3 / ((x_2 - x_1) * (x_2 - x_3)) + y_3 * x_1 * x_2 / ((x_3 - x_1) * (x_3 - x_2));\n\n      var yFunction = function yFunction(delta) {\n        return a * (delta * delta) + b * delta + c;\n      };\n\n      var m_x = target.viewObj.position.x - arrow.position.x;\n      var c_x = arrow.position.x;\n\n      var xFunction = function xFunction(delta) {\n        return m_x * delta + c_x;\n      };\n\n      var m_z = target.viewObj.position.z - arrow.position.z;\n      var c_z = arrow.position.z;\n\n      var zFunction = function zFunction(delta) {\n        return m_z * delta + c_z;\n      };\n\n      this.arrows.push({\n        id: id,\n        obj: arrow,\n        target: target,\n        startingTime: timestamp,\n        yFunction: yFunction,\n        xFunction: xFunction,\n        zFunction: zFunction\n      });\n\n      setTimeout(function () {\n        callback(target);\n        _this3.arrows = _this3.arrows.filter(function (a) {\n          return a !== id;\n        });\n        _this3.scene.remove(arrow);\n      }, this.arrowSpeed);\n    }\n  }, {\n    key: 'animateArrows',\n    value: function animateArrows(timestamp) {\n      var _this4 = this;\n\n      this.arrows.forEach(function (arrow) {\n        var delta = (timestamp - arrow.startingTime) / _this4.arrowSpeed;\n        arrow.obj.position.y = arrow.yFunction(delta);\n        arrow.obj.position.x = arrow.xFunction(delta);\n        arrow.obj.position.z = arrow.zFunction(delta);\n      });\n    }\n  }, {\n    key: 'animateAttack',\n    value: function animateAttack(timestamp) {\n      if (this.rightArm && this.initiateAttack) {\n        if (this.rightArm.rotation.z > this.animationProperties.arm.endingAngle) {\n          if (this.animationProperties.arm.lastAnimate === null) {\n            this.animationProperties.arm.lastAnimate = timestamp;\n          }\n\n          var delta = timestamp - this.animationProperties.arm.lastAnimate;\n          var timeRatio = delta / this.animationProperties.arm.speedDown;\n          var degreeChange = this.animationProperties.arm.angleDifference * timeRatio;\n\n          this.rightArm.rotation.z -= degreeChange;\n          this.animationProperties.arm.lastAnimate = timestamp;\n        } else {\n          this.spawnArrow(this.nextTarget.target, timestamp, this.nextTarget.callback);\n\n          this.resetAttackAnimation();\n        }\n      }\n\n      if (this.rightArm && this.recharging) {\n        if (this.rightArm.rotation.z < this.animationProperties.arm.startingAngle) {\n          if (this.animationProperties.arm.lastAnimate === null) {\n            this.animationProperties.arm.lastAnimate = timestamp;\n          }\n\n          var _delta = timestamp - this.animationProperties.arm.lastAnimate;\n          var _timeRatio = _delta / this.animationProperties.arm.speedUp;\n          var _degreeChange = this.animationProperties.arm.angleDifference * _timeRatio;\n\n          this.rightArm.rotation.z += _degreeChange;\n          this.animationProperties.arm.lastAnimate = timestamp;\n        } else {\n          this.recharging = false;\n          this.animationProperties.arm.lastAnimate = null;\n        }\n      }\n\n      if (this.nextTarget && this.nextTarget.target) {\n        var angleTowardsTarget = this.calculateAngleToTarget(this.nextTarget.target);\n        this.bodyModel.rotation.y = angleTowardsTarget + this.startingRotation;\n      }\n    }\n  }, {\n    key: 'resetAttackAnimation',\n    value: function resetAttackAnimation() {\n      this.initiateAttack = false;\n      this.recharging = true;\n      this.animationProperties.arm.lastAnimate = null;\n    }\n  }, {\n    key: 'calculateAngleToTarget',\n    value: function calculateAngleToTarget(target) {\n      var xDiff = target.viewObj.position.x - this.viewObj.position.x;\n      var zDiff = target.viewObj.position.z - this.viewObj.position.z;\n      var diffRatio = zDiff / xDiff;\n      return Math.PI * -this.direction - Math.atan(diffRatio) + Math.PI;\n    }\n  }, {\n    key: 'runLoop',\n    value: function runLoop(timestamp) {\n      this.attackProcedure(timestamp);\n      this.animateArrows(timestamp);\n      this.animateAttack(timestamp);\n      this.collider.update();\n    }\n  }]);\n\n  return Archer;\n}();\n\nexports.default = Archer;\n\n},{\"./constants\":8}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Base = function () {\n    function Base(args) {\n        _classCallCheck(this, Base);\n\n        this.direction = args.direction;\n        this.colliderList = args.colliderList;\n        this.player = args.player;\n        this.playerId = this.player.id;\n\n        this.baseWidth = _constants.gridWidth;\n        this.baseHeight = 20;\n        this.baseDepth = 10;\n\n        this.maxHealth = 250;\n        this.health = this.maxHealth;\n\n        this.hitBoxBuffer = 2;\n\n        this.killReward = {\n            money: 550,\n            score: 1000\n        };\n\n        this.initializeView(this.direction);\n        this.registerCollision();\n    }\n\n    _createClass(Base, [{\n        key: 'initializeView',\n        value: function initializeView(direction) {\n            var hitBoxOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            this.viewObj = new THREE.Group();\n\n            var shapeGeometry = new THREE.BoxGeometry(this.baseDepth, this.baseHeight, this.baseWidth);\n\n            var textureLoader = new THREE.TextureLoader();\n            var normalMap = textureLoader.load('textures/rock-normal-map.jpg');\n            var longTexture = textureLoader.load('textures/brick-wall.jpg');\n            var skinnyTexture = textureLoader.load('textures/brick-wall.jpg');\n            var sideTexture = textureLoader.load('textures/brick-wall.jpg');\n            var baseColor = 0x555555;\n\n            longTexture.wrapS = longTexture.wrapT = THREE.RepeatWrapping;\n            longTexture.repeat.set(3, 1);\n\n            skinnyTexture.wrapS = skinnyTexture.wrapT = THREE.RepeatWrapping;\n            skinnyTexture.repeat.set(1, 3);\n\n            sideTexture.wrapS = sideTexture.wrapT = THREE.RepeatWrapping;\n            sideTexture.repeat.set(1, 1);\n\n            var skinnyMat = new THREE.MeshPhongMaterial({ color: 0x333333, specular: 0x333333, shininess: 15, normalMap: textureLoader.load('textures/rock-normal-map.jpg'), normalScale: new THREE.Vector2(0.05, 1), map: skinnyTexture });\n\n            var longMat = new THREE.MeshPhongMaterial({ color: baseColor, specular: 0x333333, shininess: 15, normalMap: normalMap, normalScale: new THREE.Vector2(1, 1), map: longTexture });\n\n            var sideMat = new THREE.MeshPhongMaterial({ color: baseColor, specular: 0x333333, shininess: 15, normalMap: normalMap, normalScale: new THREE.Vector2(1, 1), map: sideTexture });\n\n            var shapeMaterials = [longMat, // Right\n            longMat, // Left\n            skinnyMat, // Top\n            sideMat, // Back\n            sideMat, // Front\n            skinnyMat];\n\n            var shapeMesh = new THREE.Mesh(shapeGeometry, new THREE.MultiMaterial(shapeMaterials));\n\n            var hitGeometry = new THREE.BoxGeometry(this.baseDepth + this.hitBoxBuffer, this.baseHeight + this.hitBoxBuffer, this.baseWidth + this.hitBoxBuffer);\n\n            var hitMaterial = new THREE.MeshBasicMaterial({ color: 0x00ffff, transparent: true, opacity: hitBoxOpacity, depthWrite: false });\n            var hitMesh = new THREE.Mesh(hitGeometry, hitMaterial);\n\n            this.healthBar = this.initializeHealthBar();\n            this.hitBox = hitMesh;\n\n            this.viewObj.add(shapeMesh);\n            this.viewObj.add(hitMesh);\n            this.viewObj.add(this.healthBar);\n\n            this.viewObj.position.x = (-_constants.gridWidth / 2 - this.baseDepth / 2) * this.direction;\n            this.viewObj.position.y = this.baseHeight / 2;\n\n            this.hitBox.userData.object = this;\n            this.hitBox.userData.player = this.player;\n            this.hitBox.userData.immuneToRange = true;\n        }\n    }, {\n        key: 'initializeHealthBar',\n        value: function initializeHealthBar() {\n            this._healthBarLength = _constants.gridWidth / 10;\n            this._healthBarWidth = _constants.gridWidth / 150;\n            var fullHealthBarGeometry = new THREE.BoxGeometry(this._healthBarLength, this._healthBarWidth, this._healthBarWidth);\n            var fullHealthBarMaterial = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n            var fullHealthBarMesh = new THREE.Mesh(fullHealthBarGeometry, fullHealthBarMaterial);\n            fullHealthBarMesh.name = \"FullHealthBar\";\n\n            var emptyHealthBarGeometry = new THREE.BoxGeometry(this._healthBarLength * 0.99, this._healthBarWidth * 0.9, this._healthBarWidth * 0.9);\n            var emptyHealthBarMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n            var emptyHealthBarMesh = new THREE.Mesh(emptyHealthBarGeometry, emptyHealthBarMaterial);\n            emptyHealthBarMesh.name = \"EmptyHealthBar\";\n\n            var healthBarGroup = new THREE.Group();\n            healthBarGroup.add(fullHealthBarMesh);\n            healthBarGroup.add(emptyHealthBarMesh);\n\n            healthBarGroup.position.y = this.baseHeight + 5;\n\n            return healthBarGroup;\n        }\n    }, {\n        key: 'updateHealthBar',\n        value: function updateHealthBar() {\n            var healthPercent = this.health / this.maxHealth;\n            var healthBarOffset = -(1 - healthPercent) * this._healthBarLength / 2;\n            var fullHealthBar = this.healthBar.getObjectByName('FullHealthBar');\n\n            fullHealthBar.scale.x = healthPercent;\n            fullHealthBar.position.x = healthBarOffset;\n        }\n    }, {\n        key: 'registerCollision',\n        value: function registerCollision() {\n            this.hitBox.geometry.computeBoundingBox();\n            var box3 = this.hitBox.geometry.boundingBox.clone();\n            this.collider = new THREEx.ColliderBox3(this.hitBox, box3);\n            this.colliderList.push(this.collider);\n        }\n    }, {\n        key: 'runLoop',\n        value: function runLoop() {\n            this.collider.update();\n            this.updateHealthBar();\n        }\n    }]);\n\n    return Base;\n}();\n\nexports.default = Base;\n\n},{\"./constants\":8}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar xPositive = exports.xPositive = 1;\nvar xNegative = exports.xNegative = -1;\nvar gridWidth = exports.gridWidth = 64;\nvar gridSubDiv = exports.gridSubDiv = 16;\n\nvar minion = {\n\tbaseHealth: 10,\n\tbaseAttack: 3,\n\tbaseAttackSpeed: 1000,\n\tupgrades: {\n\t\thealth: {\n\t\t\tcost: 50,\n\t\t\tamount: 5\n\t\t},\n\t\tattack: {\n\t\t\tcost: 75,\n\t\t\tamount: 2\n\t\t},\n\t\tattackSpeed: {\n\t\t\tcost: 100,\n\t\t\tamount: 25\n\t\t}\n\t}\n};\n\nvar base = {\n\tbaseHealth: 250,\n\tupgrades: {\n\t\thealth: {\n\t\t\tcost: 150,\n\t\t\tamount: 250\n\t\t}\n\t}\n};\n\nvar archer = {\n\tbaseAttack: 5,\n\tbaseAttackSpeed: 1000,\n\tbaseArrowSpeed: 1000,\n\tupgrades: {\n\t\tattack: {\n\t\t\tcost: 50,\n\t\t\tamount: 4\n\t\t},\n\t\tattackSpeed: {\n\t\t\tcost: 100,\n\t\t\tamount: 50\n\t\t}\n\t}\n};\n\nvar player = {};\n\nexports.default = { minion: minion, base: base, archer: archer, player: player };\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = require('./player');\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _aiPlayer = require('./ai-player');\n\nvar _aiPlayer2 = _interopRequireDefault(_aiPlayer);\n\nvar _menuScreen = require('./menu-screen');\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GameEngine = function () {\n  function GameEngine(args) {\n    _classCallCheck(this, GameEngine);\n\n    this.gameOver = true;\n    this.state = {};\n    this.scene = args.scene;\n    this.camera = args.camera;\n\n    this.colliderSystem = new THREEx.ColliderSystem();\n    this.colliderList = [];\n\n    this.playerId = 0;\n\n    this.initializePlayers();\n  }\n\n  _createClass(GameEngine, [{\n    key: 'initializePlayers',\n    value: function initializePlayers() {\n      this.myPlayer = new _player2.default({\n        type: 'human',\n        direction: _constants.xPositive,\n        colliderList: this.colliderList,\n        colliderSystem: this.colliderSystem,\n        scene: this.scene,\n        id: this.playerId++\n      });\n\n      this.computer = new _player2.default({\n        type: 'computer',\n        direction: _constants.xNegative,\n        colliderList: this.colliderList,\n        colliderSystem: this.colliderSystem,\n        scene: this.scene,\n        id: this.playerId++\n      });\n\n      this.AI = new _aiPlayer2.default({\n        player: this.computer,\n        personality: \"randomAI\"\n      });\n\n      this.playerAI = new _aiPlayer2.default({\n        player: this.myPlayer,\n        personality: \"randomAI\"\n      });\n\n      this.state.players = [this.myPlayer, this.computer];\n    }\n  }, {\n    key: 'initializeGameOver',\n    value: function initializeGameOver(_ref) {\n      var winner = _ref.winner,\n          score = _ref.score;\n\n      this.state.players.forEach(function (p) {\n        return p.setGameOver();\n      });\n      (0, _menuScreen.activateMenu)({\n        winner: winner,\n        score: score\n      });\n    }\n  }, {\n    key: 'restart',\n    value: function restart() {\n      while (this.colliderList.length > 0) {\n        this.colliderList.pop();\n      }\n      this.state.players.forEach(function (player) {\n        player.reset();\n      });\n      this.gameOver = false;\n    }\n  }, {\n    key: 'gameLoop',\n    value: function gameLoop(timestamp) {\n      var _this = this;\n\n      if (this.gameOver) {}\n      if (this.AI) {\n        this.AI.runLoop(timestamp, this.myPlayer.minions);\n      }\n\n      if (this.playerAI) {\n        this.playerAI.runLoop(timestamp, this.computer.minions);\n      }\n      this.state.players.forEach(function (player) {\n        player.runLoop(timestamp);\n        if (player.lost && !_this.gameOver) {\n          _this.gameOver = true;\n          var winner = _this.state.players.find(function (p) {\n            return p.id !== player.id;\n          });\n          var score = winner.score;\n          _this.initializeGameOver({ winner: winner, score: score });\n        }\n      });\n      this.colliderSystem.computeAndNotify(this.colliderList);\n    }\n  }]);\n\n  return GameEngine;\n}();\n\nexports.default = GameEngine;\n\n},{\"./ai-player\":5,\"./constants\":8,\"./menu-screen\":11,\"./player\":13}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _menuScreen = require('./menu-screen');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// UI Elements\nvar scoreText = void 0,\n    moneyText = void 0,\n    poppulationText = void 0,\n    baseHealthText = void 0,\n    minionBaseHealthText = void 0,\n    minionBaseAttackText = void 0,\n    minionBaseAttackSpeedText = void 0,\n    archerBaseAttackText = void 0,\n    archerBaseAttackSpeedText = void 0;\nvar baseHealthUpgrade = void 0,\n    minionBaseHealthUpgrade = void 0,\n    minionBaseAttackUpgrade = void 0,\n    minionBaseAttackSpeedUpgrade = void 0,\n    archerBaseAttackUpgrade = void 0,\n    archerBaseAttackSpeedUpgrade = void 0;\n\n// Texture\nvar planeTexture = new THREE.TextureLoader().load(\"textures/stone.jpg\");\nplaneTexture.repeat.set(10, 10);\nplaneTexture.wrapS = THREE.RepeatWrapping;\nplaneTexture.wrapT = THREE.RepeatWrapping;\n\nvar GameView = function () {\n  function GameView(globals, gameEngine) {\n    _classCallCheck(this, GameView);\n\n    this.scene = globals.scene;\n    this.camera = globals.camera;\n    this.renderer = globals.renderer;\n\n    this.gameEngine = gameEngine;\n\n    this.setupGrid();\n    this.setupGrassField();\n    this.setupLight();\n\n    this.mouse = { x: -10000, y: 0 };\n\n    var positionScale = _constants.gridWidth / 2;\n\n    this.camera.position.z = 2 * positionScale;\n    this.camera.position.y = 1.5 * positionScale;\n    this.camera.lookAt(this.scene.position);\n\n    this.hud = document.getElementById('hud');\n    this.hudUpgrade = document.getElementById('hud-upgrade');\n    this.lastTimeStamp = 0;\n    this.started = false;\n\n    this.raycaster = new THREE.Raycaster();\n    this.currentHoveredPanel = null;\n\n    this.setupMouseEvent();\n    (0, _menuScreen.bindButtons)(this, this.gameEngine);\n  }\n\n  _createClass(GameView, [{\n    key: 'setupLight',\n    value: function setupLight() {\n      var lightAmbient = new THREE.AmbientLight(0x666666, 3);\n      var lightSource = new THREE.PointLight(0x888888, 1);\n\n      lightSource.position.set(0, 30, 0);\n      lightAmbient.position.set(0, 30, 0);\n\n      this.scene.add(lightAmbient);\n      this.scene.add(lightSource);\n    }\n  }, {\n    key: 'setupGrid',\n    value: function setupGrid() {\n      //let texturedSurfaceGeometry = new THREE.PlaneGeometry(gridWidth, gridWidth);\n      //let texturedSurfaceMaterial = new THREE.MeshBasicMaterial({map: planeTexture});\n      //let texturedSurface = new THREE.Mesh(texturedSurfaceGeometry, texturedSurfaceMaterial);\n      //texturedSurface.rotation.x = -0.5 * Math.PI;\n      //texturedSurface.position.y = -0.3;\n      //this.scene.add(texturedSurface);\n\n      var grid = new THREE.GridHelper(_constants.gridWidth, _constants.gridSubDiv);\n      grid.position.y = -.4;\n      this.scene.add(grid);\n\n      this.gridPanels = {};\n\n      var panelLength = _constants.gridWidth / _constants.gridSubDiv;\n      var zPos = (_constants.gridWidth / 2 - panelLength / 2) * -1;\n\n      for (var i = 0; i < _constants.gridSubDiv; i++) {\n        var planeGeometry = new THREE.PlaneGeometry(_constants.gridWidth, panelLength);\n        var planeMaterial = new THREE.MeshBasicMaterial({ transparent: true, opacity: 0 });\n        var plane = new THREE.Mesh(planeGeometry, planeMaterial);\n        plane.rotation.x = -0.5 * Math.PI;\n        plane.position.z = zPos;\n        plane.position.y = 0;\n        this.scene.add(plane);\n        this.gridPanels[i] = plane;\n\n        zPos += panelLength;\n      }\n    }\n  }, {\n    key: 'setupGrassField',\n    value: function setupGrassField() {\n      var textureUrl = 'textures/grasslight-small.jpg';\n      var texture = new THREE.TextureLoader().load(textureUrl);\n      texture.wrapS = THREE.RepeatWrapping;\n      texture.wrapT = THREE.RepeatWrapping;\n      texture.repeat.y = _constants.gridSubDiv;\n      texture.repeat.x = _constants.gridSubDiv;\n      texture.anisotropy = this.renderer.getMaxAnisotropy();\n      // build object3d\n      var geometry = new THREE.PlaneGeometry(_constants.gridWidth * 10, _constants.gridWidth * 10);\n      var material = new THREE.MeshPhongMaterial({\n        map: texture,\n        shininess: 10\n      });\n      var plane = new THREE.Mesh(geometry, material);\n      plane.rotateX(-Math.PI / 2);\n      plane.position.y = -0.2;\n      this.scene.add(plane);\n\n      // let nTufts  = 2000;\n      // let positions = new Array(nTufts);\n      // for(let i = 0; i < nTufts; i++){\n      //   let position  = new THREE.Vector3();\n      //   position.x  = (Math.random()-0.5)*gridWidth;\n      //   position.z  = (Math.random()-0.5)*gridWidth;\n      //   positions[i]  = position;\n      // }\n      // let mesh  = THREEx.createGrassTufts(positions);\n      // this.scene.add(mesh);\n    }\n  }, {\n    key: 'checkGridIntersections',\n    value: function checkGridIntersections() {\n      this.raycaster.setFromCamera(this.mouse, this.camera);\n      var planes = Object.values(this.gridPanels);\n      var intersects = this.raycaster.intersectObjects(planes);\n\n      planes.forEach(function (panel) {\n        panel.material.color.setHex(0x666666);\n        panel.material.opacity = 0;\n      });\n\n      if (intersects.length > 0) {\n        var obj = intersects[0].object;\n\n        obj.material.color.setHex(0xff0000);\n        obj.material.opacity = .5;\n        this.currentHoveredPanel = obj;\n      } else if (this.currentHoveredPanel) {\n        this.currentHoveredPanel = null;\n      }\n    }\n  }, {\n    key: 'getCurrentPanelIndex',\n    value: function getCurrentPanelIndex() {\n      if (!this.currentHoveredPanel) {\n        return;\n      }\n\n      var planes = Object.values(this.gridPanels);\n\n      for (var i = 0; i < _constants.gridSubDiv; i++) {\n        if (this.currentHoveredPanel === planes[i]) {\n          return i;\n        }\n      }\n    }\n  }, {\n    key: 'setupMouseEvent',\n    value: function setupMouseEvent() {\n      var mouse = this.mouse;\n\n      window.addEventListener('mousemove', function (evt) {\n        mouse.x = event.clientX / window.innerWidth * 2 - 1;\n        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n      });\n    }\n  }, {\n    key: 'startFirstGame',\n    value: function startFirstGame() {\n      var _this = this;\n\n      this.gameEngine.restart();\n\n      this.hud.classList.remove('hud--hidden');\n      this.hudUpgrade.classList.remove('hud--hidden');\n\n      this.initializeUpgradeButtons();\n      this.initializeHudTexts();\n\n      this.started = true;\n\n      window.addEventListener('click', function () {\n        var index = _this.getCurrentPanelIndex();\n        if (index >= 0) {\n          _this.gameEngine.myPlayer.spawnMinion(index);\n        }\n      });\n\n      window.addEventListener('keypress', function () {\n        var index = _this.getCurrentPanelIndex();\n        if (index >= 0) {\n          _this.gameEngine.computer.spawnMinion(index);\n        }\n      });\n    }\n  }, {\n    key: 'calculateFPS',\n    value: function calculateFPS(timestamp) {\n      var delta = timestamp - this.lastTimeStamp;\n      delta = delta / 1000;\n      this.lastTimeStamp = timestamp;\n      return Math.round(1 / delta);\n    }\n  }, {\n    key: 'updateUI',\n    value: function updateUI(timestamp) {\n      scoreText.textContent = this.gameEngine.myPlayer.score;\n      moneyText.textContent = this.gameEngine.myPlayer.money;\n      poppulationText.textContent = this.gameEngine.myPlayer.minions.length + \"/\" + this.gameEngine.myPlayer.poppulationCap;\n\n      if (this.gameEngine.myPlayer.base !== null) {\n        baseHealthText.textContent = Math.max(this.gameEngine.myPlayer.base.health, 0).toFixed(2) + \" / \" + this.gameEngine.myPlayer.base.maxHealth;\n      } else {\n        baseHealthText.textContent = \"0\";\n      }\n\n      minionBaseHealthText.textContent = _constants2.default.minion.baseHealth + _constants2.default.minion.upgrades.health.amount * this.gameEngine.myPlayer.upgrades.minionBaseHealth;\n      minionBaseAttackText.textContent = _constants2.default.minion.baseAttack + _constants2.default.minion.upgrades.attack.amount * this.gameEngine.myPlayer.upgrades.minionBaseAttack;\n      minionBaseAttackSpeedText.textContent = ((_constants2.default.minion.baseAttackSpeed + this.gameEngine.myPlayer.upgrades.minionBaseAttackSpeed * -_constants2.default.minion.upgrades.attackSpeed.amount) / 1000).toFixed(2) + 's';\n\n      archerBaseAttackText.textContent = _constants2.default.archer.baseAttack + this.gameEngine.myPlayer.upgrades.archerBaseAttack * _constants2.default.archer.upgrades.attack.amount;\n      archerBaseAttackSpeedText.textContent = ((_constants2.default.archer.baseAttackSpeed - this.gameEngine.myPlayer.upgrades.archerBaseAttackSpeed * _constants2.default.archer.upgrades.attackSpeed.amount) / 1000).toFixed(2) + \"s\";\n    }\n  }, {\n    key: 'renderLoop',\n    value: function renderLoop(timestamp) {\n      this.checkGridIntersections();\n      this.gameEngine.gameLoop(timestamp);\n\n      if (this.started) {\n        this.updateUI(timestamp);\n      }\n    }\n  }, {\n    key: 'initializeHudTexts',\n    value: function initializeHudTexts() {\n      scoreText = document.getElementById('score');\n      moneyText = document.getElementById('money');\n      poppulationText = document.getElementById('poppulation');\n      baseHealthText = document.getElementById('baseHealth');\n      minionBaseHealthText = document.getElementById('minionBaseHealth');\n      minionBaseAttackText = document.getElementById('minionBaseAttack');\n      minionBaseAttackSpeedText = document.getElementById('minionBaseAttackSpeed');\n      archerBaseAttackText = document.getElementById('archerBaseAttack');\n      archerBaseAttackSpeedText = document.getElementById('archerBaseAttackSpeed');\n    }\n  }, {\n    key: 'initializeUpgradeButtons',\n    value: function initializeUpgradeButtons() {\n      var gameView = this;\n\n      baseHealthUpgrade = document.getElementById('baseHealthUpgrade');\n      baseHealthUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeBaseHealth();\n      });\n\n      minionBaseHealthUpgrade = document.getElementById('minionBaseHealthUpgrade');\n      minionBaseHealthUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeMinionHealth();\n      });\n\n      minionBaseAttackUpgrade = document.getElementById('minionBaseAttackUpgrade');\n      minionBaseAttackUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeMinionAttack();\n      });\n\n      minionBaseAttackSpeedUpgrade = document.getElementById('minionBaseAttackSpeedUpgrade');\n      minionBaseAttackSpeedUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeMinionAttackSpeed();\n      });\n\n      archerBaseAttackUpgrade = document.getElementById('archerBaseAttackUpgrade');\n      archerBaseAttackUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeWizardAttack();\n      });\n\n      archerBaseAttackSpeedUpgrade = document.getElementById('archerBaseAttackSpeedUpgrade');\n      archerBaseAttackSpeedUpgrade.addEventListener('click', function () {\n        gameView.gameEngine.myPlayer.upgradeWizardAttackSpeed();\n      });\n    }\n  }]);\n\n  return GameView;\n}();\n\nexports.default = GameView;\n\n},{\"./constants\":8,\"./menu-screen\":11}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.activateMenu = activateMenu;\nexports.closeMenu = closeMenu;\nexports.bindButtons = bindButtons;\nvar modal = document.getElementById('modal');\nvar startSection = document.getElementById('startModal');\nvar startButton = document.getElementById('startButton');\nvar restartSection = document.getElementById('restartModal');\nvar restartButton = document.getElementById('restartButton');\nvar restartModalMessage = document.getElementById('restartModalMessage');\n\nfunction activateStartScreen() {\n  startSection.classList.add('modal--visible');\n  restartSection.classList.remove('modal--visible');\n}\n\nfunction activateRestartScreen(winner, score) {\n\n  var text = 'Player ' + (winner.id + 1) + ' wins with a score of ' + score + '!';\n  restartModalMessage.textContent = text;\n\n  startSection.classList.remove('modal--visible');\n  restartSection.classList.add('modal--visible');\n}\n\nfunction activateMenu(args) {\n  modal.classList.add('modal--visible');\n\n  if (args.winner !== null) {\n    activateRestartScreen(args.winner, args.score);\n  } else {\n    activateStartScreen();\n  }\n}\n\nfunction closeMenu(args) {\n  modal.classList.remove('modal--visible');\n}\n\nfunction bindButtons(gameView, gameEngine) {\n  startButton.addEventListener('click', function () {\n    gameView.startFirstGame();\n    closeMenu();\n  });\n\n  restartButton.addEventListener('click', function () {\n    gameEngine.restart();\n    closeMenu();\n  });\n}\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Minion = function () {\n  function Minion(args) {\n    _classCallCheck(this, Minion);\n\n    this.direction = args.direction;\n    this.colliderList = args.colliderList;\n    this.id = args.id;\n    this.playerId = args.playerId;\n    this.player = args.player;\n    this.startingZ = args.startingZ;\n    this.scene = args.scene;\n\n    this.maxHealth = _constants2.default.minion.baseHealth + args.healthUpgrade * _constants2.default.minion.upgrades.health.amount;\n    this.attackStrength = _constants2.default.minion.baseAttack + args.attackUpgrade * _constants2.default.minion.upgrades.attack.amount;\n    this.attackSpeed = _constants2.default.minion.baseAttackSpeed + args.attackSpeedUpgrade * -_constants2.default.minion.upgrades.attackSpeed.amount;\n    this.defaultSpeed = .3;\n\n    this.health = this.maxHealth;\n    this.speed = this.defaultSpeed;\n    this.attackProperties = {\n      lastTimeStamp: null,\n      attackTime: 0\n    };\n\n    this.attackAnimationProperties = {\n      direction: 1,\n      speed: this.attackSpeed / 2\n    };\n\n    this.walkingAnimationProperties = {\n      direction: this.direction,\n      speed: 50 / this.defaultSpeed, // This should not change only change the speed of the minion and the animation will update accordingly\n      lastTimeStamp: null,\n      time: 0\n    };\n\n    this.killReward = {\n      money: 75,\n      score: 25\n    };\n\n    this.destroy = false;\n    this.attack = false;\n\n    this.rotObjectMatrix = null;\n\n    this.initializeView(this.startingZ);\n    this.registerCollision();\n  }\n\n  _createClass(Minion, [{\n    key: 'initializeView',\n    value: function initializeView(startingZ) {\n      var hitBoxOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this.viewObj = new THREE.Group();\n\n      var hitGeometry = new THREE.BoxGeometry(3, 8, 3);\n      var hitMaterial = new THREE.MeshBasicMaterial({ color: 0x00ffff, transparent: true, opacity: hitBoxOpacity });\n      var hitMesh = new THREE.Mesh(hitGeometry, hitMaterial);\n\n      this.healthBar = this.initializeHealthBar();\n\n      hitMesh.add(this.healthBar);\n      this.viewObj = hitMesh;\n      this.hitBox = this.viewObj;\n\n      var z = startingZ * (_constants.gridWidth / _constants.gridSubDiv) - _constants.gridWidth / 2 + _constants.gridWidth / _constants.gridSubDiv / 2;\n      var x = _constants.gridWidth / 2 * -this.direction;\n      this.viewObj.position.z = z;\n      this.viewObj.position.x = x;\n      this.viewObj.position.y = 4;\n\n      this.hitBox.userData.object = this;\n      this.hitBox.userData.player = this.player;\n      hitGeometry.dispose();\n      hitMaterial.dispose();\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.viewObj.position;\n    }\n  }, {\n    key: 'initializeHealthBar',\n    value: function initializeHealthBar() {\n      this._healthBarWidth = 2;\n      var fullHealthBarGeometry = new THREE.BoxGeometry(this._healthBarWidth, 0.3, 0.3);\n      var fullHealthBarMaterial = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n      var fullHealthBarMesh = new THREE.Mesh(fullHealthBarGeometry, fullHealthBarMaterial);\n      fullHealthBarMesh.name = \"FullHealthBar\";\n\n      var emptyHealthBarGeometry = new THREE.BoxGeometry(this._healthBarWidth, 0.2, 0.2);\n      var emptyHealthBarMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n      var emptyHealthBarMesh = new THREE.Mesh(emptyHealthBarGeometry, emptyHealthBarMaterial);\n      emptyHealthBarMesh.name = \"EmptyHealthBar\";\n\n      var healthBarGroup = new THREE.Group();\n      healthBarGroup.add(fullHealthBarMesh);\n      healthBarGroup.add(emptyHealthBarMesh);\n\n      healthBarGroup.position.y = 4;\n\n      return healthBarGroup;\n    }\n  }, {\n    key: 'isObjectLoaded',\n    value: function isObjectLoaded(obj) {\n      return obj.position.x === 0 && obj.position.y === 0 && obj.position.z === 0;\n    }\n  }, {\n    key: 'registerCollision',\n    value: function registerCollision() {\n      var _this = this;\n\n      this.hitBox.geometry.computeBoundingBox();\n      var box3 = this.hitBox.geometry.boundingBox.clone();\n      this.collider = new THREEx.ColliderBox3(this.hitBox, box3);\n\n      this.colliderList.push(this.collider);\n\n      this.collider.addEventListener('contactEnter', function (otherCollider) {\n        var userData = otherCollider.object3d.userData;\n\n        if (userData.player.id === _this.playerId) {\n          return;\n        }\n        if (userData.ranged) {\n          return;\n        }\n\n        _this.speed = 0;\n        _this.attack = true;\n        _this.currentTarget = userData.object;\n        _this.resetWalkAnimation();\n      });\n\n      this.collider.addEventListener('contactStay', function (otherCollider) {\n        var userData = otherCollider.object3d.userData;\n\n        if (userData.player.id === _this.playerId) {\n          return;\n        }\n        if (userData.ranged) {\n          return;\n        }\n\n        if (_this.currentTarget === null) {\n          _this.speed = 0;\n          _this.attack = true;\n          _this.currentTarget = userData.object;\n          _this.resetWalkAnimation();\n        }\n      });\n\n      this.collider.addEventListener('contactRemoved', function (otherCollider) {\n        _this.speed = _this.defaultSpeed;\n        _this.attack = false;\n        _this.currentTarget = null;\n      });\n\n      this.collider.addEventListener('contactExit', function (otherCollider) {\n        _this.speed = _this.defaultSpeed;\n        _this.attack = false;\n        _this.currentTarget = null;\n      });\n    }\n  }, {\n    key: 'getAttackValue',\n    value: function getAttackValue() {\n      var critProc = Math.random();\n      return critProc >= .9 ? this.attackStrength * (Math.random() + 1) : this.attackStrength;\n    }\n  }, {\n    key: 'updateHealthBar',\n    value: function updateHealthBar() {\n      var healthPercent = this.health / this.maxHealth;\n      var healthBarOffset = -(1 - healthPercent) * this._healthBarWidth / 2;\n      var fullHealthBar = this.healthBar.getObjectByName('FullHealthBar');\n\n      fullHealthBar.scale.x = healthPercent;\n      fullHealthBar.position.x = healthBarOffset;\n    }\n  }, {\n    key: 'runLoop',\n    value: function runLoop(timestamp) {\n      this.attackProcedure(timestamp);\n      this.viewObj.position.x += this.speed * this.direction;\n      this.walkProcedure(timestamp);\n\n      this.collider.update();\n      this.updateHealthBar();\n    }\n  }, {\n    key: 'attackProcedure',\n    value: function attackProcedure(timestamp) {\n      if (this.health <= 0) {\n        return;\n      }\n\n      if (this.attackProperties.lastTimeStamp != null && this.attack) {\n        var delta = timestamp - this.attackProperties.lastTimeStamp;\n        this.attackProperties.attackTime = this.attackProperties.attackTime + delta;\n        this.attackProperties.lastTimeStamp = timestamp;\n        this.attackLoop(delta);\n      } else if (this.attack) {\n        this.attackProperties.attackTime = 0;\n        this.attackProperties.lastTimeStamp = timestamp;\n        this.attackLoop(0);\n      }\n\n      this.attackProperties.lastTimeStamp = timestamp;\n    }\n  }, {\n    key: 'attackLoop',\n    value: function attackLoop(delta) {\n      if (this.currentTarget === null || this.currentTarget.playerId === this.playerId) {\n        return;\n      }\n      this.animateAttack(delta);\n      if (this.attackProperties.attackTime <= this.attackSpeed) {\n        return;\n      }\n\n      this.currentTarget.health -= this.getAttackValue();\n\n      if (this.currentTarget.health <= 0) {\n        this.player.processReward(this.currentTarget.killReward);\n\n        this.currentTarget.attack = false;\n        this.currentTarget.destroy = true;\n        this.currentTarget = null;\n      }\n\n      this.attackProperties.attackTime = 0;\n      this.attackProperties.lastTimeStamp = null;\n    }\n  }, {\n    key: 'animateAttack',\n    value: function animateAttack(delta) {\n      if (this.viewObj.children.length > 1) {\n        var rightArm = this.viewObj.children[1].children[1];\n        var currentAttackTime = this.attackProperties.attackTime;\n        var direction = this.attackAnimationProperties.direction;\n        var animationSpeed = this.attackAnimationProperties.speed;\n        var maxRotation = 135;\n\n        var rotation = direction * (maxRotation * (Math.PI / 180) * (delta / animationSpeed));\n        rotation = Math.min(rightArm.rotation.z + rotation, maxRotation);\n        rotation = Math.max(rotation, 0);\n\n        rightArm.rotation.z = rotation;\n        if (currentAttackTime > animationSpeed) {\n          this.attackAnimationProperties.direction = -1;\n        } else {\n          this.attackAnimationProperties.direction = 1;\n        }\n      }\n    }\n  }, {\n    key: 'resetAttackAnimation',\n    value: function resetAttackAnimation() {\n      if (this.viewObj.children.length > 1) {\n        var rightArm = this.viewObj.children[1].children[1];\n        rightArm.rotation.z = 0;\n      }\n    }\n  }, {\n    key: 'walkProcedure',\n    value: function walkProcedure(timestamp) {\n      if (!this.attack && this.walkingAnimationProperties.lastTimeStamp !== null) {\n        var delta = timestamp - this.walkingAnimationProperties.lastTimeStamp;\n        this.walkingAnimationProperties.time = this.walkingAnimationProperties.time + delta;\n        this.walkLoop(delta);\n      } else {\n        this.walkLoop(0);\n      }\n\n      this.walkingAnimationProperties.lastTimeStamp = timestamp;\n    }\n  }, {\n    key: 'walkLoop',\n    value: function walkLoop(delta) {\n      this.animateWalk(delta);\n      if (this.walkingAnimationProperties.time <= this.walkingAnimationProperties.speed) {\n        return;\n      }\n      this.walkingAnimationProperties.time = 0;\n    }\n  }, {\n    key: 'animateWalk',\n    value: function animateWalk(delta) {\n      if (this.viewObj.children.length > 1 && !this.attack) {\n        var legs = this.viewObj.children[1].children[3];\n        var leftLeg = legs.children[0];\n        var rightLeg = legs.children[1];\n        var animationTime = this.walkingAnimationProperties.time;\n        var animationSpeed = this.walkingAnimationProperties.speed;\n        var direction = this.walkingAnimationProperties.direction;\n        var maxRotation = 45;\n\n        var rotation = maxRotation * (delta / animationSpeed);\n\n        if (direction) {\n          this.animateLegForward(leftLeg, rotation, maxRotation, delta);\n          this.animateLegBack(rightLeg, rotation, maxRotation, delta);\n        } else {\n          this.animateLegForward(rightLeg, rotation, maxRotation, delta);\n          this.animateLegBack(leftLeg, rotation, maxRotation, delta);\n        }\n\n        if (this.toDegrees(leftLeg.rotation.z) >= maxRotation || this.toDegrees(leftLeg.rotation.z) <= -maxRotation) {\n          this.walkingAnimationProperties.direction = !this.walkingAnimationProperties.direction;\n        }\n      }\n    }\n  }, {\n    key: 'animateLegBack',\n    value: function animateLegBack(leg, rotation, maxRotation, delta) {\n      var max = this.toRadians(-maxRotation);\n\n      if (leg.rotation.z + this.toRadians(-rotation) < max) {\n        leg.rotation.z = max;\n      } else {\n        leg.rotation.z += this.toRadians(-rotation);\n      }\n    }\n  }, {\n    key: 'animateLegForward',\n    value: function animateLegForward(leg, rotation, maxRotation, delta) {\n      var max = this.toRadians(maxRotation);\n      if (leg.rotation.z + this.toRadians(rotation) > max) {\n        leg.rotation.z = max;\n      } else {\n        leg.rotation.z += this.toRadians(rotation);\n      }\n    }\n  }, {\n    key: 'resetWalkAnimation',\n    value: function resetWalkAnimation() {\n      if (this.viewObj.children.length > 1) {\n        var legs = this.viewObj.children[1].children[3];\n        var leftLeg = legs.children[0];\n        var rightLeg = legs.children[1];\n\n        leftLeg.rotation.z = 0;\n        rightLeg.rotation.z = 0;\n      }\n    }\n  }, {\n    key: 'toDegrees',\n    value: function toDegrees(angleRadians) {\n      return angleRadians * 180 / Math.PI;\n    }\n  }, {\n    key: 'toRadians',\n    value: function toRadians(angleDegrees) {\n      return angleDegrees / 180 * Math.PI;\n    }\n  }]);\n\n  return Minion;\n}();\n\nexports.default = Minion;\n\n},{\"./constants\":8}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _minion = require('./minion');\n\nvar _minion2 = _interopRequireDefault(_minion);\n\nvar _archer = require('./archer');\n\nvar _archer2 = _interopRequireDefault(_archer);\n\nvar _base = require('./base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Player = function () {\n  function Player(args) {\n    _classCallCheck(this, Player);\n\n    this.type = args.type;\n    this.id = args.id;\n    this.direction = args.direction;\n    this.colliderList = args.colliderList;\n    this.colliderSystem = args.colliderSystem;\n    this.scene = args.scene;\n    this.minionId = 0;\n    this.spawnPos = -_constants.gridWidth / 2 * this.direction;\n    this.poppulationCap = 30;\n\n    this.setUpgradeValues();\n    this.loader = new THREE.ObjectLoader();\n\n    this.setupGameState();\n    this.spawnBase();\n    this.spawnArchers();\n  }\n\n  _createClass(Player, [{\n    key: 'spawnArchers',\n    value: function spawnArchers() {\n      var _this = this;\n\n      var archer = new _archer2.default({\n        scene: this.scene,\n        colliderList: this.colliderList,\n        startingZ: 2,\n        startingY: 20,\n        startingX: this.spawnPos,\n        direction: this.direction,\n        player: this\n      });\n\n      this.archers.push(archer);\n\n      this.loader.load('./geometry/wizard.json', function (obj) {\n        obj.position.y = -4;\n        archer.viewObj.add(obj);\n\n        archer.bodyModel = archer.viewObj.children[2];\n        archer.rightArm = archer.bodyModel.children[1];\n        archer.rightArm.rotation.z = 135 / 180 * Math.PI;\n        if (archer.direction === -1) {\n          archer.viewObj.children[2].rotation.y = Math.PI;\n          archer.startingRotation = Math.PI;\n        }\n\n        _this.scene.add(archer.viewObj);\n      });\n    }\n  }, {\n    key: 'spawnBase',\n    value: function spawnBase() {\n      this.base = new _base2.default({\n        direction: this.direction,\n        colliderList: this.colliderList,\n        player: this\n      });\n\n      this.scene.add(this.base.viewObj);\n    }\n  }, {\n    key: 'spawnMinion',\n    value: function spawnMinion(index) {\n      var _this2 = this;\n\n      if (this.minions.length < this.poppulationCap) {\n        if (this.money >= this.minionCost) {\n          if (!this.gameOver) {\n            this.money -= this.minionCost;\n          }\n\n          var minion = new _minion2.default({\n            id: this.minionId++,\n            healthUpgrade: this.upgrades.minionBaseHealth,\n            attackUpgrade: this.upgrades.minionBaseAttack,\n            attackSpeedUpgrade: this.upgrades.minionBaseAttackSpeed,\n            playerId: this.id,\n            direction: this.direction,\n            startingZ: index,\n            colliderList: this.colliderList,\n            player: this\n          });\n\n          this.minions.push(minion);\n          this.loader.load('./geometry/model.json', function (obj) {\n            obj.position.y = -4;\n            minion.viewObj.add(obj);\n\n            if (minion.direction === -1) {\n              minion.viewObj.children[1].rotation.y = Math.PI;\n            }\n\n            _this2.scene.add(minion.viewObj);\n          });\n        }\n      }\n    }\n  }, {\n    key: 'processReward',\n    value: function processReward(reward) {\n      if (this.gameOver) {\n        return;\n      }\n      var t = this;\n      Object.keys(reward).forEach(function (key) {\n        t[key] += reward[key];\n      });\n    }\n  }, {\n    key: 'runLoop',\n    value: function runLoop(timestamp) {\n      var _this3 = this;\n\n      if (this.base !== null) {\n        this.base.runLoop();\n        if (this.base.destroy) {\n          this.destroyBase();\n        }\n      }\n\n      this.archers.forEach(function (archer) {\n        archer.runLoop(timestamp);\n      });\n\n      this.minions.forEach(function (minion, index) {\n        minion.runLoop(timestamp);\n        if (!minion.attack) {\n          minion.resetAttackAnimation();\n        }\n        if (minion.destroy) {\n          _this3.destroyMinion(minion, index);\n        }\n      });\n\n      this.colliderSystem.computeAndNotify(this.colliderList);\n    }\n  }, {\n    key: 'destroyMinion',\n    value: function destroyMinion(minion, index) {\n      this.scene.remove(minion.viewObj);\n\n      this.colliderList.splice(this.findColliderIndex(minion.collider.id), 1);\n      minion.collider.removeEventListener('contactEnter');\n      minion.collider.removeEventListener('contactStay');\n      minion.collider.removeEventListener('contactExit');\n      minion.collider.removeEventListener('contactRemoved');\n      this.minions.splice(index, 1);\n    }\n  }, {\n    key: 'destroyBase',\n    value: function destroyBase() {\n      var _this4 = this;\n\n      this.archers.forEach(function (archer) {\n        _this4.scene.remove(archer.viewObj);\n        _this4.colliderList.splice(_this4.findColliderIndex(archer.collider.id), 1);\n      });\n      this.archers.length = 0;\n\n      this.scene.remove(this.base.viewObj);\n      this.colliderList.splice(this.findColliderIndex(this.base.collider.id), 1);\n      this.base = null;\n      this.lost = true;\n    }\n  }, {\n    key: 'findColliderIndex',\n    value: function findColliderIndex(id) {\n      var index = -1;\n\n      for (var i = 0; i < this.colliderList.length; i++) {\n        if (this.colliderList[i].id === id) {\n          index = i;\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: 'setGameOver',\n    value: function setGameOver() {\n      this.gameOver = true;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      var _this5 = this;\n\n      this.minions.forEach(function (minion) {\n        _this5.scene.remove(minion.viewObj);\n      });\n\n      if (this.base) {\n        this.scene.remove(this.base.viewObj);\n        this.base = null;\n      }\n\n      this.archers.forEach(function (archers) {\n        _this5.scene.remove(archers.viewObj);\n      });\n\n      this.gameOver = false;\n      this.setUpgradeValues();\n      this.setupGameState();\n      this.spawnBase();\n      this.spawnArchers();\n    }\n  }, {\n    key: 'setupGameState',\n    value: function setupGameState() {\n      this.minions = [];\n      this.archers = [];\n      this.score = 0;\n      this.money = 4000;\n      this.minionCost = 50;\n      this.lost = false;\n    }\n  }, {\n    key: 'setUpgradeValues',\n    value: function setUpgradeValues() {\n      this.upgrades = {\n        baseHealth: 0,\n        minionBaseHealth: 0,\n        minionBaseAttack: 0,\n        minionBaseAttackSpeed: 0,\n        archerBaseAttack: 0,\n        archerBaseAttackSpeed: 0\n      };\n    }\n  }, {\n    key: 'getBaseHealthUpgradeCost',\n    value: function getBaseHealthUpgradeCost() {\n      return _constants2.default.base.upgrades.health.cost * (this.upgrades.baseHealth + 1);\n    }\n  }, {\n    key: 'canUpgradeBaseHealth',\n    value: function canUpgradeBaseHealth() {\n      return this.money > this.getBaseHealthUpgradeCost();\n    }\n  }, {\n    key: 'upgradeBaseHealth',\n    value: function upgradeBaseHealth() {\n      if (this.canUpgradeBaseHealth()) {\n        this.upgrades.baseHealth++;\n        this.base.maxHealth += _constants2.default.base.upgrades.health.amount;\n        this.base.health += _constants2.default.base.upgrades.health.amount;\n        this.money -= _constants2.default.base.upgrades.health.cost * this.upgrades.baseHealth;\n      }\n    }\n  }, {\n    key: 'getMinionHealthUpgradeCost',\n    value: function getMinionHealthUpgradeCost() {\n      return _constants2.default.minion.upgrades.health.cost * (this.upgrades.minionBaseHealth + 1);\n    }\n  }, {\n    key: 'canUpgradeMinionHealth',\n    value: function canUpgradeMinionHealth() {\n      return this.money > this.getMinionHealthUpgradeCost();\n    }\n  }, {\n    key: 'upgradeMinionHealth',\n    value: function upgradeMinionHealth() {\n      if (this.canUpgradeMinionHealth()) {\n        this.upgrades.minionBaseHealth++;\n        this.money -= _constants2.default.minion.upgrades.health.cost * this.upgrades.minionBaseHealth;\n      }\n    }\n  }, {\n    key: 'getMinionAttackUpgradeCost',\n    value: function getMinionAttackUpgradeCost() {\n      return _constants2.default.minion.upgrades.attack.cost * (this.upgrades.minionBaseAttack + 1);\n    }\n  }, {\n    key: 'canUpgradeMinionAttack',\n    value: function canUpgradeMinionAttack() {\n      return this.money > this.getMinionAttackUpgradeCost();\n    }\n  }, {\n    key: 'upgradeMinionAttack',\n    value: function upgradeMinionAttack() {\n      if (this.canUpgradeMinionAttack()) {\n        this.upgrades.minionBaseAttack++;\n        this.money -= _constants2.default.minion.upgrades.attack.cost * this.upgrades.minionBaseAttack;\n      }\n    }\n  }, {\n    key: 'getMinionAttackSpeedUpgradeCost',\n    value: function getMinionAttackSpeedUpgradeCost() {\n      return _constants2.default.minion.upgrades.attackSpeed.cost * (this.upgrades.minionBaseAttackSpeed + 1);\n    }\n  }, {\n    key: 'canUpgradeMinionAttackSpeed',\n    value: function canUpgradeMinionAttackSpeed() {\n      return this.money > this.getMinionAttackSpeedUpgradeCost();\n    }\n  }, {\n    key: 'upgradeMinionAttackSpeed',\n    value: function upgradeMinionAttackSpeed() {\n      if (this.canUpgradeMinionAttackSpeed()) {\n        this.upgrades.minionBaseAttackSpeed++;\n        this.money -= _constants2.default.minion.upgrades.attackSpeed.cost * this.upgrades.minionBaseAttackSpeed++;\n      }\n    }\n  }, {\n    key: 'getWizardAttackUpgradeCost',\n    value: function getWizardAttackUpgradeCost() {\n      return _constants2.default.archer.upgrades.attack.cost * (this.upgrades.archerBaseAttack + 1);\n    }\n  }, {\n    key: 'canUpgradeWizardAttack',\n    value: function canUpgradeWizardAttack() {\n      return this.money > this.getWizardAttackUpgradeCost();\n    }\n  }, {\n    key: 'upgradeWizardAttack',\n    value: function upgradeWizardAttack() {\n      if (this.canUpgradeWizardAttack()) {\n        this.archers.forEach(function (archer) {\n          archer.attackStrength += _constants2.default.archer.upgrades.attack.amount;\n        });\n\n        this.upgrades.archerBaseAttack++;\n        this.money -= _constants2.default.archer.upgrades.attack.cost * this.upgrades.archerBaseAttack;\n      }\n    }\n  }, {\n    key: 'getWizardAttackSpeedUpgradeCost',\n    value: function getWizardAttackSpeedUpgradeCost() {\n      return _constants2.default.archer.upgrades.attackSpeed.cost * (this.upgrades.archerBaseAttackSpeed + 1);\n    }\n  }, {\n    key: 'canUpgradeWizardAttackSpeed',\n    value: function canUpgradeWizardAttackSpeed() {\n      return this.money > this.getWizardAttackSpeedUpgradeCost();\n    }\n  }, {\n    key: 'upgradeWizardAttackSpeed',\n    value: function upgradeWizardAttackSpeed() {\n      if (this.canUpgradeWizardAttackSpeed()) {\n        this.archers.forEach(function (archer) {\n          archer.attackSpeed -= _constants2.default.archer.upgrades.attackSpeed.amount;\n          archer.arrowSpeed -= _constants2.default.archer.upgrades.attackSpeed.amount;\n        });\n\n        this.upgrades.archerBaseAttackSpeed++;\n        this.money -= _constants2.default.archer.upgrades.attackSpeed.cost * this.upgrades.archerBaseAttackSpeed;\n      }\n    }\n  }]);\n\n  return Player;\n}();\n\nexports.default = Player;\n\n},{\"./archer\":6,\"./base\":7,\"./constants\":8,\"./minion\":12}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupScreenView = setupScreenView;\nexports.setupPerformance = setupPerformance;\nfunction handleResize(renderer, camera) {\n  var w = window.innerWidth;\n  var h = window.innerHeight;\n  renderer.setSize(w, h);\n  camera.aspect = w / h;\n  camera.updateProjectionMatrix();\n}\n\nfunction setupResizing(renderer, camera) {\n  window.addEventListener('resize', function () {\n    handleResize(renderer, camera);\n  });\n}\n\nfunction setupScreenView() {\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n  var renderer = new THREE.WebGLRenderer();\n  renderer.shadowMapEnabled = true;\n  renderer.shadowMapType = THREE.PCFSoftShadowMap;\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  setupResizing(renderer, camera);\n\n  return { scene: scene, camera: camera, renderer: renderer };\n}\n\nfunction setupPerformance() {\n  var rendererStats = new THREEx.RendererStats();\n  rendererStats.domElement.style.position = 'absolute';\n  rendererStats.domElement.style.left = '0px';\n  rendererStats.domElement.style.bottom = '0px';\n  document.body.appendChild(rendererStats.domElement);\n  return rendererStats;\n}\n\n},{}]},{},[4])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}